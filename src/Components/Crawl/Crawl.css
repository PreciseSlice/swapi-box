.crawl-container {
  height: 100%;
  width: 100%;
  overflow: hidden; }

.fade {
  position: relative;
  width: 100%;
  min-height: 22vh;
  background-image: linear-gradient(0deg, transparent, #000a0f 75%);
  z-index: 1;
  width: 100%; }

.star-wars {
  display: flex;
  justify-content: center;
  /* This is a magic number based on the context in which this snippet is used and effects the perspective */
  height: 400px;
  /* This sets allows us to transform the text on a 3D plane, and is somewhat a magic number */
  perspective: 250px;
  /* The rest is totally up to personal styling preferences */
  color: #feda4a;
  font-family: 'Oswald', sans-serif;
  font-size: 500%;
  font-weight: 600;
  letter-spacing: 6px;
  line-height: 150%;
  text-align: justify;
  width: 100%; }

.crawl {
  /* Position the element so we can adjust the top property in the animation */
  position: relative;
  /* Making sure the text is fully off the screen at the start and end of the animation */
  top: 260px;
  /* Defines the skew origin at the very center when we apply transforms on the animation */
  transform-origin: 50% 100%;
  /* Adds the crawl animation, which plays for one minute */
  animation: crawl 80s linear;
  width: 100%; }

.crawl > .title {
  font-size: 90%;
  text-align: center; }

.crawl > .title h1 {
  margin: 0 0 100px;
  text-transform: uppercase; }

/* We're calling this animation "crawl" */
@keyframes crawl {
  0% {
    /* The element starts below the screen */
    top: 0;
    /* Rotate the text 20 degrees but keep it close to the viewer */
    transform: rotateX(20deg) translateZ(0); }
  100% {
    /* This is a magic number, but using a big one to make sure the text is fully off the screen at the end */
    top: -6000px;
    /* Slightly increasing the rotation at the end and moving the text far away from the viewer */
    transform: rotateX(25deg) translateZ(-2500px); } }
